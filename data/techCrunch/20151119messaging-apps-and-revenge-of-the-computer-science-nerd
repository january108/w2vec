メッセージングアプリでコンピュータサイエンスおたくがデザイン偏重のWebに復讐する[筆者: Indus Khaitan]（Oracleに買収されたエンタプライズモバイルのBitzer Mobileの協同ファウンダ。その前はソーシャルメディアのコンテンツ発見プラットホームSezWhoのCTO。）初期のWebサイトは単純なHTMLだった。長いHTML文が何でも表現し、左右対称のページレイアウトが好まれた。CSSがなかったので、今日のように、HTMLのコードが三次元的に肥大することはなかった。ぼくは最初からCSSが嫌いで、今でも大嫌いだ。敬愛すると同時に憎たらしくもあるデザイナーたちが、ぼくのWebを乗っ取ってしまった。彼らは、ぼくのシンプルなHTMLのコードを、CSSとJavaScriptの煮えたぎるマグマの中に放り込んだ。Webサーバ以外の部分では、元々デザイナーだった友だちの多くが、Webデベロッパやアプリのデベロッパになった。しかしぼくは、あくまでもコンピュータサイエンスのエンジニアなので、Webデザインという軽薄なアートに手を染めることはなかった。その代わり、お金を払った。たくさんのお金を、Webデザイナーたちに払った。Webのフロントエンドの開発は、今や混乱のきわみだ。フォームの記入欄を表示するといった簡単なことでも、10とおり以上ものやり方がある。そしてそれらのやり方は標準性がなく、どれもばらばらだ。ささやかなHTMLをCSSで粉飾し、それにJavaScriptを加えてページを100%混乱させる。言うまでもなく、同じマークアップコードを複数のJavaScriptフレームワークが管理していると、混乱は倍増する。もっとひどいのは、複数のデベロッパが触ったページだ。それは、複数の外科医が昼休みにバーガーを食いながら手術をした患者の体になる。モバイルアプリともなると、デザイナーへの依存度がWebの10倍になる。さまざまな画面サイズや、解像度、ボタン、画像、それらと絡み合うテキスト…これらを管理しなければならない。そしてルックスがすべてに優先するから、関係データベースの湖から流れ出るビットの内面的な美を鑑賞する楽しみは、消え去る。でも、解脱の時が近づいている。チャットのウィンドウが、新しいユーザインタフェイスになりつつある。エージェント（人間またはマシン）と会話をする、仕事はそれだけだ。今日の、ごてごてしたWebページと違って、メッセージングアプリにはマークアップがなくて、テキストをネットワークに乗せるだけだ。Human Computer Interaction(HCI)の理論は、人間の日常の動作に倣え、と教える。メッセージングアプリなら、それが可能だ。メッセージングアプリは今でも、新種が続々出ている。Magic, GoButler and Operatorなどなど、WeChatの成功の後を追うアジア製が多い。いずれも単純なテキストメッセージをやりとりするだけがアプリの仕事だが、料理の注文も、タクシーの呼び出しも、航空券の予約も、何でもできる。どれも人間の生活を助ける人間コンシェルジュが相手だが、中には人間とマシンの対話もある。後者の場合でもしかし、人間の日常の会話を真似ている。人間がエージェント（人間または機械）に話しかける。向こうにいる人間またはマシンがメニューを説明し、配達してほしい品物の購入トランザクションが完了する。チャットでコンピュータサイエンスが再び輝きを取り戻す。Webページやアプリの画面で、何をどこに置こうか考えるのではなく、チャットアプリでは、機械学習やデータ構造をめぐって本物のイノベーションが起きている。単純なテキストによる会話が定型データへと整理され、JSONのペイロードを介してどこかのAPIに投入される。今日では、アプリの多くを人間がサポートしている。ときには、人間の大群が。でも彼らの仕事には、機械学習の技術が使いやすくなったために、完全に自動化できるものが多い。たとえば、誰でも使える機械学習エンジンIBM Watsonをベースとして、（Facebookが買収した）wit.aiのような新進スタートアップが続々登場している。Y Combinatorの傘下にも、MonkeyLearnのような機械学習大衆化サービス、AIaaS(artificial intelligence-as-a-service)が増えているという。機械学習をクラウドサービスとして使えるようになり、メッセージングがユーザインタフェイスになれば、今や時代は再び、コンピュータサイエンスおたく(nerd)のものだ。メッセージングアプリによって、今日のWebページが陥（おちい）ってしまった軽佻浮薄なフレームワークにおさらばできる。そして、人間と機械の対話の、単純性を取り戻せるのだ。